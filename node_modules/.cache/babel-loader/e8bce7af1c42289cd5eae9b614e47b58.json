{"ast":null,"code":"import _slicedToArray from \"/Users/zarymanning/Desktop/CodingChallenges/CodingChallenges/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zarymanning/Desktop/CodingChallenges/CodingChallenges/src/problem2.2.js\";\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport { useState } from 'react';\nimport './styling.css'; // class CodingChallenge extends Component {\n// state = {\n//   firstName: '',\n// }\n\nfunction CodingChallenge() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        updatedName = _useState2[0],\n        setUpdatedName = _useState2[1];\n\n  const onClick = e => {\n    e.preventDefault();\n    let updatedName = e.target.value;\n    this.setState({\n      firstName: updatedName\n    });\n  }; // displayNameHandler = (e) => {\n  //   let updatedName = e.target.value;\n  //   this.setState({ firstName: updatedName });\n  //   //console.log(updatedName);\n  // }\n  //\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   this.setState({\n  //     firstName: true\n  //       });\n  //\n  // }\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    onSubmit: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Enter Your Name\"), React.createElement(\"input\", {\n    id: \"inputBox\",\n    type: \"text\",\n    name: \"firstName\",\n    onChange: this.displayNameHandler,\n    value: this.state.firstName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"submit\",\n    onClick: this.handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Submit\"), this.state.showName && React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Hello \", this.state.firstName, \", welcome to the page.\")));\n}\n\nexport default CodingChallenge; // The code below is an attempt at trying to figure out how to not have automatic update underneath the text box, but rather\n// to update the welcome msg only after the button is clicked again\n// displayNameHandler = (e) => {\n//   let updatedName = e.target.value;\n//   this.setState({ firstName: updatedName });\n//   //console.log(updatedName);\n// }\n//\n// handleSubmit = (e) => {\n//   e.preventDefault();\n//   this.setState({\n//     showName: true\n//   });\n// }\n//   resetForm = () => {\n//    this.setState({\n//        ...this.state,\n//        firstname: '',\n//        lastname: ''\n//    })\n// }","map":{"version":3,"sources":["/Users/zarymanning/Desktop/CodingChallenges/CodingChallenges/src/problem2.2.js"],"names":["ReactDOM","React","Component","useState","CodingChallenge","updatedName","setUpdatedName","onClick","e","preventDefault","target","value","setState","firstName","handleSubmit","displayNameHandler","state","showName"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAO,eAAP,C,CAEI;AACA;AACA;AACA;;AAEJ,SAASC,eAAT,GAA2B;AAAA,oBAEaD,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,QAElBE,WAFkB;AAAA,QAELC,cAFK;;AAIvB,QAAMC,OAAO,GAAIC,CAAD,IAAO;AACrBA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAIJ,WAAW,GAAGG,CAAC,CAACE,MAAF,CAASC,KAA3B;AACA,SAAKC,QAAL,CAAc;AAAEC,MAAAA,SAAS,EAAER;AAAb,KAAd;AACD,GAJD,CAJuB,CAUzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAE,KAAKS,YAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,IAAI,EAAC,WAAtC;AAAkD,IAAA,QAAQ,EAAE,KAAKC,kBAAjE;AAAqF,IAAA,KAAK,EAAE,KAAKC,KAAL,CAAWH,SAAvG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,KAAKC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIG,KAAKE,KAAL,CAAWC,QAAX,IAAuB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAU,KAAKD,KAAL,CAAWH,SAArB,2BAJ1B,CADF,CADF;AAUH;;AAED,eAAeT,eAAf,C,CAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport {useState} from 'react';\nimport './styling.css';\n\n    // class CodingChallenge extends Component {\n    // state = {\n    //   firstName: '',\n    // }\n\nfunction CodingChallenge() {\n\n  const [updatedName, setUpdatedName] = useState('');\n\n    const onClick = (e) => {\n      e.preventDefault();\n      let updatedName = e.target.value;\n      this.setState({ firstName: updatedName });\n    }\n\n  // displayNameHandler = (e) => {\n  //   let updatedName = e.target.value;\n  //   this.setState({ firstName: updatedName });\n  //   //console.log(updatedName);\n  // }\n  //\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   this.setState({\n  //     firstName: true\n  //       });\n  //\n  // }\n\n    return (\n      <div>\n        <form onSubmit={this.handleSubmit}>\n          <h1>Enter Your Name</h1>\n          <input id=\"inputBox\" type=\"text\" name=\"firstName\" onChange={this.displayNameHandler} value={this.state.firstName} />\n          <button type=\"submit\" onClick={this.handleSubmit}>Submit</button>\n          {this.state.showName && <p>Hello {this.state.firstName}, welcome to the page.</p>}\n        </form>\n      </div>\n    );\n}\n\nexport default CodingChallenge;\n\n\n\n// The code below is an attempt at trying to figure out how to not have automatic update underneath the text box, but rather\n// to update the welcome msg only after the button is clicked again\n\n\n// displayNameHandler = (e) => {\n//   let updatedName = e.target.value;\n//   this.setState({ firstName: updatedName });\n//   //console.log(updatedName);\n// }\n//\n// handleSubmit = (e) => {\n//   e.preventDefault();\n//   this.setState({\n//     showName: true\n//   });\n// }\n\n\n\n\n\n//   resetForm = () => {\n//    this.setState({\n//        ...this.state,\n//        firstname: '',\n//        lastname: ''\n//    })\n// }\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/zarymanning/Desktop/CodingChallenges/CodingChallenges/src/hackeranimation.js\";\nimport ReactDOM from 'react-dom';\nimport React from 'react';\nimport './styling.css';\n\nfunction HackerAnimation() {\n  var intervalID = window.setInterval(updateScreen, 200);\n  var c = document.getElementById(\"console\");\n  var txt = [\"FORCE: XX0022. ENCYPT://000.222.2345\", \"TRYPASS: ********* AUTH CODE: ALPHA GAMMA: 1___ PRIORITY 1\", \"RETRY: REINDEER FLOTILLA\", \"Z:> /FALKEN/GAMES/TICTACTOE/ EXECUTE -PLAYERS 0\", \"================================================\", \"Priority 1 // local / scanning...\", \"scanning ports...\", \"BACKDOOR FOUND (23.45.23.12.00000000)\", \"BACKDOOR FOUND (13.66.23.12.00110000)\", \"BACKDOOR FOUND (13.66.23.12.00110044)\", \"...\", \"...\", \"BRUTE.EXE -r -z\", \"...locating vulnerabilities...\", \"...vulnerabilities found...\", \"MCP/> DEPLOY CLU\", \"SCAN: __ 0100.0000.0554.0080\", \"SCAN: __ 0020.0000.0553.0080\", \"SCAN: __ 0001.0000.0554.0550\", \"SCAN: __ 0012.0000.0553.0030\", \"SCAN: __ 0100.0000.0554.0080\", \"SCAN: __ 0020.0000.0553.0080\"];\n  var docfrag = document.createDocumentFragment();\n\n  function updateScreen() {\n    //Shuffle the \"txt\" array\n    txt.push(txt.shift()); //Rebuild document fragment\n\n    txt.forEach(function (e) {\n      var p = document.createElement(\"p\");\n      p.textContent = e;\n      docfrag.appendChild(p);\n    }); //  Clear DOM body\n\n    while (c.firstChild) {\n      c.removeChild(c.firstChild);\n    } // c.appendChild(docfrag);\n\n  }\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    class: \"msg\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, \"Programming\"), React.createElement(\"div\", {\n    id: \"console\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }));\n}\n\nexport default HackerAnimation; // The code below is an attempt at trying to figure out how to not have automatic update underneath the text box, but rather\n// to update the welcome msg only after the button is clicked again\n// displayNameHandler = (e) => {\n//   let updatedName = e.target.value;\n//   this.setState({ firstName: updatedName });\n//   //console.log(updatedName);\n// }\n//\n// handleSubmit = (e) => {\n//   e.preventDefault();\n//   this.setState({\n//     showName: true\n//   });\n// }\n//   resetForm = () => {\n//    this.setState({\n//        ...this.state,\n//        firstname: '',\n//        lastname: ''\n//    })\n// }","map":{"version":3,"sources":["/Users/zarymanning/Desktop/CodingChallenges/CodingChallenges/src/hackeranimation.js"],"names":["ReactDOM","React","HackerAnimation","intervalID","window","setInterval","updateScreen","c","document","getElementById","txt","docfrag","createDocumentFragment","push","shift","forEach","e","p","createElement","textContent","appendChild","firstChild","removeChild"],"mappings":";AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP;;AAEA,SAASC,eAAT,GAA2B;AAEzB,MAAIC,UAAU,GAAGC,MAAM,CAACC,WAAP,CAAmBC,YAAnB,EAAiC,GAAjC,CAAjB;AACA,MAAIC,CAAC,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAR;AAEA,MAAIC,GAAG,GAAG,CACR,sCADQ,EAER,4DAFQ,EAGR,0BAHQ,EAIR,iDAJQ,EAKR,kDALQ,EAMR,mCANQ,EAOR,mBAPQ,EAQR,uCARQ,EASR,uCATQ,EAUR,uCAVQ,EAWR,KAXQ,EAYR,KAZQ,EAaR,iBAbQ,EAcR,gCAdQ,EAeR,6BAfQ,EAgBR,kBAhBQ,EAiBR,8BAjBQ,EAkBR,8BAlBQ,EAmBR,8BAnBQ,EAoBR,8BApBQ,EAqBR,8BArBQ,EAsBR,8BAtBQ,CAAV;AAyBA,MAAIC,OAAO,GAAGH,QAAQ,CAACI,sBAAT,EAAd;;AAEA,WAASN,YAAT,GAAwB;AACtB;AACAI,IAAAA,GAAG,CAACG,IAAJ,CAASH,GAAG,CAACI,KAAJ,EAAT,EAFsB,CAGtB;;AACAJ,IAAAA,GAAG,CAACK,OAAJ,CAAY,UAASC,CAAT,EAAY;AACtB,UAAIC,CAAC,GAAGT,QAAQ,CAACU,aAAT,CAAuB,GAAvB,CAAR;AACAD,MAAAA,CAAC,CAACE,WAAF,GAAgBH,CAAhB;AACAL,MAAAA,OAAO,CAACS,WAAR,CAAoBH,CAApB;AACD,KAJD,EAJsB,CASxB;;AACE,WAAOV,CAAC,CAACc,UAAT,EAAqB;AACnBd,MAAAA,CAAC,CAACe,WAAF,CAAcf,CAAC,CAACc,UAAhB;AACD,KAZqB,CAatB;;AACD;;AAEC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADF,EAEI;AAAK,IAAA,EAAE,EAAC,SAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAQH;;AAED,eAAenB,eAAf,C,CAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ReactDOM from 'react-dom';\nimport React from 'react';\nimport './styling.css';\n\nfunction HackerAnimation() {\n\n  var intervalID = window.setInterval(updateScreen, 200);\n  var c = document.getElementById(\"console\");\n\n  var txt = [\n    \"FORCE: XX0022. ENCYPT://000.222.2345\",\n    \"TRYPASS: ********* AUTH CODE: ALPHA GAMMA: 1___ PRIORITY 1\",\n    \"RETRY: REINDEER FLOTILLA\",\n    \"Z:> /FALKEN/GAMES/TICTACTOE/ EXECUTE -PLAYERS 0\",\n    \"================================================\",\n    \"Priority 1 // local / scanning...\",\n    \"scanning ports...\",\n    \"BACKDOOR FOUND (23.45.23.12.00000000)\",\n    \"BACKDOOR FOUND (13.66.23.12.00110000)\",\n    \"BACKDOOR FOUND (13.66.23.12.00110044)\",\n    \"...\",\n    \"...\",\n    \"BRUTE.EXE -r -z\",\n    \"...locating vulnerabilities...\",\n    \"...vulnerabilities found...\",\n    \"MCP/> DEPLOY CLU\",\n    \"SCAN: __ 0100.0000.0554.0080\",\n    \"SCAN: __ 0020.0000.0553.0080\",\n    \"SCAN: __ 0001.0000.0554.0550\",\n    \"SCAN: __ 0012.0000.0553.0030\",\n    \"SCAN: __ 0100.0000.0554.0080\",\n    \"SCAN: __ 0020.0000.0553.0080\",\n  ]\n\n  var docfrag = document.createDocumentFragment();\n\n  function updateScreen() {\n    //Shuffle the \"txt\" array\n    txt.push(txt.shift());\n    //Rebuild document fragment\n    txt.forEach(function(e) {\n      var p = document.createElement(\"p\");\n      p.textContent = e;\n      docfrag.appendChild(p);\n    });\n  //  Clear DOM body\n    while (c.firstChild) {\n      c.removeChild(c.firstChild);\n    }\n    // c.appendChild(docfrag);\n  }\n\n    return (\n      <div>\n        <div class=\"msg\">Programming</div>\n          <div id=\"console\">\n          </div>\n      </div>\n\n    );\n}\n\nexport default HackerAnimation;\n\n\n\n// The code below is an attempt at trying to figure out how to not have automatic update underneath the text box, but rather\n// to update the welcome msg only after the button is clicked again\n\n\n// displayNameHandler = (e) => {\n//   let updatedName = e.target.value;\n//   this.setState({ firstName: updatedName });\n//   //console.log(updatedName);\n// }\n//\n// handleSubmit = (e) => {\n//   e.preventDefault();\n//   this.setState({\n//     showName: true\n//   });\n// }\n\n\n\n\n\n//   resetForm = () => {\n//    this.setState({\n//        ...this.state,\n//        firstname: '',\n//        lastname: ''\n//    })\n// }\n"]},"metadata":{},"sourceType":"module"}
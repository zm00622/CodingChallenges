{"ast":null,"code":"import _slicedToArray from \"/Users/zarymanning/Desktop/CodingChallenges/CodingChallenges/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/zarymanning/Desktop/CodingChallenges/CodingChallenges/src/problem2.2.js\";\nimport ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport { useState } from 'react';\nimport './styling.css'; // class CodingChallenge extends Component {\n// state = {\n//   firstName: '',\n// }\n\nfunction CodingChallenge() {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        updatedName = _useState2[0],\n        setUpdatedName = _useState2[1];\n\n  const handleClick = e => {\n    e.preventDefault();\n    setUpdatedName(updatedName === e.target.value); // code for error\n  }; // displayNameHandler = (e) => {\n  //   let updatedName = e.target.value;\n  //   this.setState({ firstName: updatedName });\n  //   //console.log(updatedName);\n  // }\n  //\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   this.setState({\n  //     firstName: true\n  //       });\n  //\n  // }\n\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Enter Your Name\"), React.createElement(\"input\", {\n    id: \"inputBox\",\n    type: \"text\",\n    name: \"firstName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"\",\n    onClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Submit\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Hello \", setUpdatedName, \", welcome to the page.\")));\n} // May need to add  value={setUpdatedName} into the input box\n\n\nexport default CodingChallenge; // The code below is an attempt at trying to figure out how to not have automatic update underneath the text box, but rather\n// to update the welcome msg only after the button is clicked again\n// displayNameHandler = (e) => {\n//   let updatedName = e.target.value;\n//   this.setState({ firstName: updatedName });\n//   //console.log(updatedName);\n// }\n//\n// handleSubmit = (e) => {\n//   e.preventDefault();\n//   this.setState({\n//     showName: true\n//   });\n// }\n//   resetForm = () => {\n//    this.setState({\n//        ...this.state,\n//        firstname: '',\n//        lastname: ''\n//    })\n// }","map":{"version":3,"sources":["/Users/zarymanning/Desktop/CodingChallenges/CodingChallenges/src/problem2.2.js"],"names":["ReactDOM","React","Component","useState","CodingChallenge","updatedName","setUpdatedName","handleClick","e","preventDefault","target","value"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAAQC,QAAR,QAAuB,OAAvB;AACA,OAAO,eAAP,C,CAEI;AACA;AACA;AACA;;AAEJ,SAASC,eAAT,GAA2B;AAAA,oBAEaD,QAAQ,CAAC,EAAD,CAFrB;AAAA;AAAA,QAElBE,WAFkB;AAAA,QAELC,cAFK;;AAIvB,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACzBA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,cAAc,CAACD,WAAW,KAAKG,CAAC,CAACE,MAAF,CAASC,KAA1B,CAAd,CAFyB,CAGzB;AACD,GAJD,CAJuB,CAUzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEE,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAEE;AAAO,IAAA,EAAE,EAAC,UAAV;AAAqB,IAAA,IAAI,EAAC,MAA1B;AAAiC,IAAA,IAAI,EAAC,WAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE;AAAQ,IAAA,IAAI,EAAC,EAAb;AAAgB,IAAA,OAAO,EAAEJ,WAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAUD,cAAV,2BAJF,CADF,CADF;AAUH,C,CAED;;;AAEA,eAAeF,eAAf,C,CAIA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import ReactDOM from 'react-dom';\nimport React, { Component } from 'react';\nimport {useState} from 'react';\nimport './styling.css';\n\n    // class CodingChallenge extends Component {\n    // state = {\n    //   firstName: '',\n    // }\n\nfunction CodingChallenge() {\n\n  const [updatedName, setUpdatedName] = useState('');\n\n    const handleClick = (e) => {\n      e.preventDefault();\n      setUpdatedName(updatedName === e.target.value);\n      // code for error\n    }\n\n  // displayNameHandler = (e) => {\n  //   let updatedName = e.target.value;\n  //   this.setState({ firstName: updatedName });\n  //   //console.log(updatedName);\n  // }\n  //\n  // handleSubmit = (e) => {\n  //   e.preventDefault();\n  //   this.setState({\n  //     firstName: true\n  //       });\n  //\n  // }\n\n    return (\n      <div>\n        <form>\n          <h1>Enter Your Name</h1>\n          <input id=\"inputBox\" type=\"text\" name=\"firstName\" />\n          <button type=\"\" onClick={handleClick}>Submit</button>\n          <p>Hello {setUpdatedName}, welcome to the page.</p>\n        </form>\n      </div>\n    );\n}\n\n// May need to add  value={setUpdatedName} into the input box\n\nexport default CodingChallenge;\n\n\n\n// The code below is an attempt at trying to figure out how to not have automatic update underneath the text box, but rather\n// to update the welcome msg only after the button is clicked again\n\n\n// displayNameHandler = (e) => {\n//   let updatedName = e.target.value;\n//   this.setState({ firstName: updatedName });\n//   //console.log(updatedName);\n// }\n//\n// handleSubmit = (e) => {\n//   e.preventDefault();\n//   this.setState({\n//     showName: true\n//   });\n// }\n\n\n\n\n\n//   resetForm = () => {\n//    this.setState({\n//        ...this.state,\n//        firstname: '',\n//        lastname: ''\n//    })\n// }\n"]},"metadata":{},"sourceType":"module"}